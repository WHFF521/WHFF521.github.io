<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AiRomance</title>
  <icon>https://blog.whff521.xyz/images/101.ico</icon>
  <subtitle>爱裸漫三三</subtitle>
  <link href="https://blog.whff521.xyz/atom.xml" rel="self"/>
  <link href="https://pubsubhubbub.appspot.com/" rel="hub"/>
  <link href="https://blog.whff521.xyz/"/>
  <updated>2024-05-22T09:20:05.241Z</updated>
  <id>https://blog.whff521.xyz/</id>
  
  <author>
    <name>AiRomance</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Chess For Three</title>
    <link href="https://blog.whff521.xyz/2024/05/22/check-for-three/"/>
    <id>https://blog.whff521.xyz/2024/05/22/check-for-three/</id>
    <published>2024-05-22T09:14:42.000Z</published>
    <updated>2024-05-22T09:20:05.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Chess-For-Three"><a href="#Chess-For-Three" class="headerlink" title="Chess For Three"></a>Chess For Three</h1><p>这是Codeforces Round 945 (Div. 2) 第一题。  </p><p><a href="https://codeforces.com/contest/1973/problem/A">题目链接</a>  </p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>三个人玩游戏，每局两个人玩。赢得人得2分，输的人得0分。平局每个人得1分。会给你三个人的最终得分，问最多平局多少局。</p><h2 id="重点记录"><a href="#重点记录" class="headerlink" title="重点记录"></a>重点记录</h2><p>这里题确实不难，但是有一个样例因为没有给怎么算的导致我一直以为样例给错了。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4 5</span><br><span class="line">6</span><br></pre></td></tr></table></figure><p>3分4分5分，最大平局数是6。  </p><p>我最一开始想的是a和b平局3次，b还剩一局和c平局，这是4次。a和c平局3次，b和c平局2次，这是5次。<br>但是样例给的是6次。</p><p>6次的情况应该是<strong>c和a平局2次，c和b平局3次，a和b平局1次</strong>，这样就是6次。这真的是太amazing了。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>可以直接暴力枚举a和b，a和c，b和c平局次数，然后判断分数是否合法。除去平局的分数，剩下的分数应该<code>left%2==0</code>。  </p><p>但是还有结论， <code>min((p1+p2+p3)/2,p1+p2)</code>，这里保证<code>p1&lt;=p2&lt;=p3</code>。  </p><p>先考虑合不合法，三个数加一起如果是偶数就一定合法。  </p><p>其次，如果<code>p1+p2&lt;=p3</code>，那么情况应该是a和c平局p1次，b和c平局p2次。这就是最大的平局数。  </p><p>如果<code>p1+p2&gt;p3</code>，相当于<code>p1&gt;p3-p2</code>。a可以和c玩p3-p2次，相当于a剩余分数为<code>p1-(p3-p2)</code>，这个分数一定是偶数。a还可以和b和c分别玩<code>(p1-(p3-p2))/2</code>次。这里a和其他人的平局数就是p1。b和c还可以平局<code>p2-(p1-(p3-p2))/2)</code>次。加一起就是<code>(p1+p2+p3)/2</code>。</p><p>标程核心：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; (v[<span class="number">0</span>] + v[<span class="number">1</span>] + v[<span class="number">2</span>] - <span class="built_in">max</span>(<span class="number">0</span>, v[<span class="number">2</span>] - v[<span class="number">0</span>] - v[<span class="number">1</span>])) / <span class="number">2</span> &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>暴力正解：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="type">int</span> p1,p2,p3;</span><br><span class="line">        cin&gt;&gt;p1&gt;&gt;p2&gt;&gt;p3;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">        <span class="comment">// i d12,j d13,k d23</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">30</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">30</span>;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(p1-i-j&gt;=<span class="number">0</span>&amp;&amp;(p1-i-j)%<span class="number">2</span>==<span class="number">0</span> &amp;&amp;</span><br><span class="line">                       p2-i-k&gt;=<span class="number">0</span>&amp;&amp;(p2-i-k)%<span class="number">2</span>==<span class="number">0</span> &amp;&amp;</span><br><span class="line">                       p3-j-k&gt;=<span class="number">0</span>&amp;&amp;(p3-j-k)%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                        ans = <span class="built_in">max</span>(ans,i+j+k);    </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans!=<span class="number">-1</span>) cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Chess-For-Three&quot;&gt;&lt;a href=&quot;#Chess-For-Three&quot; class=&quot;headerlink&quot; title=&quot;Chess For Three&quot;&gt;&lt;/a&gt;Chess For Three&lt;/h1&gt;&lt;p&gt;这是Codeforces</summary>
        
      
    
    
    
    <category term="算法题" scheme="https://blog.whff521.xyz/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="Codeforces" scheme="https://blog.whff521.xyz/tags/Codeforces/"/>
    
    <category term="数学" scheme="https://blog.whff521.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Prison Escape</title>
    <link href="https://blog.whff521.xyz/2024/05/17/Prison-Escape/"/>
    <id>https://blog.whff521.xyz/2024/05/17/Prison-Escape/</id>
    <published>2024-05-17T08:18:09.000Z</published>
    <updated>2024-05-17T08:21:05.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prison-Escape"><a href="#Prison-Escape" class="headerlink" title="Prison Escape"></a>Prison Escape</h1><p>这是<code>codechef starter 134 div4</code>的第六题。<br><a href="https://www.codechef.com/problems/PRISON">题目链接</a></p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>NxM的01矩阵，0代表罪犯，1代表守卫者。罪犯可以上下左右移动，计算罪犯最少需要经过几个守卫者才能逃出这个矩阵。我们要求出这些罪犯里边经过最少守卫者数量的最大值。<br>数据范围：<code>T 1000，N和M 3e5，NxM&lt;3e5</code>。</p><h2 id="赛时回顾"><a href="#赛时回顾" class="headerlink" title="赛时回顾"></a>赛时回顾</h2><p>一眼最短路，但是看见数据范围就没有去写代码。我觉得每个0点去执行最短路算法应该会超时。或者直接每个0进行bfs应该也会超时。</p><h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p><strong>有个东西叫多源最短路</strong>。实际上我应该换位思考，不是去求0到边界的最短路，而是边界到0的最短路。多源最短路有两种方法，一是设置虚拟节点连接到所有源，二是直接把所有源节点压入队列中，不需要理会。</p><p>所以实际上这个题目是典型的<code>0-1BFS</code>问题。我们只需要将所有边界节点压入队列中，然后一点点向内更新距离即可。最后答案就是<code>d[i][j]</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mxlen = <span class="number">3e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="type">int</span> n,m;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        string a[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            cin &gt;&gt; a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; <span class="built_in">d</span>(n,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m,INT_MAX));</span><br><span class="line">        deque&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt; dq;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">0</span>||j==<span class="number">0</span>||i==n<span class="number">-1</span>||j==m<span class="number">-1</span>)&#123;</span><br><span class="line">                    d[i][j]=a[i][j]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(d[i][j]==<span class="number">0</span>)&#123;</span><br><span class="line">                        dq.<span class="built_in">push_front</span>(&#123;i,j&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> dq.<span class="built_in">push_back</span>(&#123;i,j&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> dx[] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">        <span class="type">int</span> dy[] = &#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">while</span>(!dq.<span class="built_in">empty</span>())&#123;</span><br><span class="line">            <span class="type">int</span> x = dq.<span class="built_in">front</span>().first;</span><br><span class="line">            <span class="type">int</span> y = dq.<span class="built_in">front</span>().second;</span><br><span class="line">            dq.<span class="built_in">pop_front</span>();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">                <span class="type">int</span> xx = x+dx[i];</span><br><span class="line">                <span class="type">int</span> yy = y+dy[i];</span><br><span class="line">                <span class="keyword">if</span>(xx&lt;<span class="number">0</span>||yy&lt;<span class="number">0</span>||xx&gt;=n||yy&gt;=m) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> weight = a[xx][yy]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(d[x][y]+weight&lt;d[xx][yy])&#123;</span><br><span class="line">                    d[xx][yy]=d[x][y]+weight;</span><br><span class="line">                    <span class="keyword">if</span>(weight==<span class="number">0</span>)&#123;</span><br><span class="line">                        dq.<span class="built_in">push_front</span>(&#123;xx,yy&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> dq.<span class="built_in">push_back</span>(&#123;xx,yy&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][j]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                    ans = <span class="built_in">max</span>(ans,d[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Prison-Escape&quot;&gt;&lt;a href=&quot;#Prison-Escape&quot; class=&quot;headerlink&quot; title=&quot;Prison Escape&quot;&gt;&lt;/a&gt;Prison Escape&lt;/h1&gt;&lt;p&gt;这是&lt;code&gt;codechef starter</summary>
        
      
    
    
    
    <category term="算法题" scheme="https://blog.whff521.xyz/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="01BFS" scheme="https://blog.whff521.xyz/tags/01BFS/"/>
    
    <category term="多源最短路" scheme="https://blog.whff521.xyz/tags/%E5%A4%9A%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>3 out 1 in</title>
    <link href="https://blog.whff521.xyz/2024/05/16/3-out-1-in/"/>
    <id>https://blog.whff521.xyz/2024/05/16/3-out-1-in/</id>
    <published>2024-05-16T09:01:19.000Z</published>
    <updated>2024-05-16T09:03:07.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3out1in"><a href="#3out1in" class="headerlink" title="3out1in"></a>3out1in</h1><p><a href="https://www.codechef.com/problems/OKLAMA">题目链接</a>  </p><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>这是<code>codechef starter 134 div4</code>的第五题。  </p><p>给你一个数组B，里面包含M个数字，其中M必定为奇数。操作是选出三个数字a,b,c, 这三个数字从数组里剔除，数组中重新加入成员<code>a+b-c</code>。可以看出来每一次操作会让数组少两个元素，问最后剩下一个元素的最大值是多少。其中有多个询问，询问内容是如果只有前k个元素，剩下的最后一个元素最大值是多少。</p><h2 id="赛时回顾"><a href="#赛时回顾" class="headerlink" title="赛时回顾"></a>赛时回顾</h2><p>我在第一次做这道题的时候就直接考虑到了用优先队列。显然最优解是每次选两个最大值，然后减去最小值。原数组我用数组<code>a</code>存储，每次将前<code>k</code>个元素送入优先队列和数组<code>b</code>中，数组<code>b</code>进行排序用来获得最小值，优先队列获取最大值。成功拿到30分的部分分，其他测试会超时。</p><h2 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h2><p>官方题解思路让我恍然大悟。<strong>永远记得可以用空间换取时间</strong>。既然可以用一个优先队列，那么我们就可以用两个优先队列。虽然我们不知道给出的qurey里<code>k</code>的值是多少，但是我们可以用<code>ans</code>数组记录所有对应k值的答案。  </p><p>首先就要考虑随着数组元素的增加，状态是如何转移的。我们可以将现有元素分成两组，一个是<code>samll</code>组，一个是<code>large</code>组。<code>small</code>组是所有会被减去的数字，<code>large</code>组是所有会被加上的数字。每次需要两个<code>large</code>组的元素相加，一个<code>small</code>组的元素被减，但是得到的数字还应该被保留在<code>large</code>数组里。可以推断出，<code>large</code>数组元素个数应该永远比<code>small</code>数组多1。</p><p>事实上我们并不需要将真的每次操作得到的数字压到优先队列里面。因为每个数字只有两种可能，被赋予加号，代表和其他元素相加，被赋予减号，代表被减去。符号确定后所有元素的和是不会变的。我们只需要计算现在<code>small</code>组里元素的总和<code>sumin</code>，<code>large</code>组里元素的总和<code>sumax</code>，然后答案就是<code>sumax-sumin</code>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mxlen = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[mxlen];</span><br><span class="line">ll ans[mxlen];</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">    priority_queue&lt;ll&gt; pqmin;</span><br><span class="line">    priority_queue&lt;ll&gt; pqmax;</span><br><span class="line">    ll sumin = <span class="number">0</span>;</span><br><span class="line">    ll sumax = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        pqmin.<span class="built_in">push</span>(a[i]);</span><br><span class="line">        sumin+=a[i];</span><br><span class="line">        <span class="comment">//这里表达式的意思是pqmin.size()要永远少一个</span></span><br><span class="line">        <span class="keyword">while</span>(pqmin.<span class="built_in">size</span>()&gt;=pqmax.<span class="built_in">size</span>())&#123;</span><br><span class="line">            ll mi = pqmin.<span class="built_in">top</span>();</span><br><span class="line">            pqmin.<span class="built_in">pop</span>();</span><br><span class="line">            pqmax.<span class="built_in">push</span>(-mi);</span><br><span class="line">            sumax+=mi;</span><br><span class="line">            sumin-=mi;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!pqmin.<span class="built_in">empty</span>()&amp;&amp;pqmin.<span class="built_in">top</span>()&gt;-pqmax.<span class="built_in">top</span>())&#123;</span><br><span class="line">            ll mi = pqmin.<span class="built_in">top</span>();</span><br><span class="line">            ll ma = -pqmax.<span class="built_in">top</span>();</span><br><span class="line">            pqmin.<span class="built_in">pop</span>(); pqmax.<span class="built_in">pop</span>();</span><br><span class="line">            pqmin.<span class="built_in">push</span>(ma);</span><br><span class="line">            pqmax.<span class="built_in">push</span>(-mi);</span><br><span class="line">            sumin = sumin-mi+ma;</span><br><span class="line">            sumax = sumax-ma+mi;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ans[i]=sumax-sumin;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">cin&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">    </span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="built_in">work</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        cin&gt;&gt;k;</span><br><span class="line">            cout&lt;&lt;ans[k]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;3out1in&quot;&gt;&lt;a href=&quot;#3out1in&quot; class=&quot;headerlink&quot; title=&quot;3out1in&quot;&gt;&lt;/a&gt;3out1in&lt;/h1&gt;&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="算法题" scheme="https://blog.whff521.xyz/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="优先队列" scheme="https://blog.whff521.xyz/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 944 (Div. 4) 回顾</title>
    <link href="https://blog.whff521.xyz/2024/05/11/Codeforces-Round-944-Div-4-%E5%9B%9E%E9%A1%BE/"/>
    <id>https://blog.whff521.xyz/2024/05/11/Codeforces-Round-944-Div-4-%E5%9B%9E%E9%A1%BE/</id>
    <published>2024-05-11T12:19:50.000Z</published>
    <updated>2024-05-11T12:22:11.120Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Codeforces-Round-944-Div-4-回顾"><a href="#Codeforces-Round-944-Div-4-回顾" class="headerlink" title="Codeforces Round 944 (Div. 4) 回顾"></a>Codeforces Round 944 (Div. 4) 回顾</h1><h2 id="比赛回顾"><a href="#比赛回顾" class="headerlink" title="比赛回顾"></a>比赛回顾</h2><p>赛中是AC了前四题，E答案错误，F超时。可以说是做到了最后五分钟，排名是6000多。  </p><p><a href="https://codeforces.com/contest/1971">比赛链接</a>  </p><p><a href="https://codeforces.com/blog/entry/129364">官方题解链接</a>  </p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>AB就直接跳过了，纯签到。 </p><h3 id="C-Clock-and-Strings"><a href="#C-Clock-and-Strings" class="headerlink" title="C. Clock and Strings"></a>C. Clock and Strings</h3><p>C题意思是给出表中两对数字，看每对数字连接的线是否相交。我的思路是只要一条线的一个端点在另一条线的区间内，切另一端在区间外即可断定这两条线是相交的。</p><p>为了更好的进行区分，我进行了排序，其中满足<code>a&lt;c a&lt;b c&lt;d</code>。</p><p>我觉得不能直接去写，表上的数字是1到12，对于一条线，一个端点是1，另一个端点是10，其中11和12其实是在线的包围内的，所以我给所有小于6的数字加了12，区间变成了6到17，然后判断是否<code>c</code>在<code>a</code>和<code>b</code>之间,<code>d</code>在<code>a</code>和<code>b</code>之外。<br>但是我今天才发现我的判断语句竟然是这样的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((a&lt;c&amp;&amp;c&lt;b)||(a&lt;d&amp;&amp;d&lt;b)) cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br></pre></td></tr></table></figure><p>我究竟是怎么过了这题的所有数据，只判断了一端在区间内就过了，根本没看是否另一端是否在区间外。。。  </p><p>官方题解就很有意思，他是从1到12遍历，记录一个字符串，如果碰到第一条线的端点，字符串就加一个’a’，碰到另一条线的端点，字符串就加一个’b’，这样如果答案是’abab’或者’baba’就说明有一条线的端点在另一条线区间内而且另一端点在区间外，非常巧妙。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, c, d;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == a || i == b) &#123;s += <span class="string">&quot;a&quot;</span>;&#125;</span><br><span class="line"><span class="keyword">if</span> (i == c || i == d) &#123;s += <span class="string">&quot;b&quot;</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; (s == <span class="string">&quot;abab&quot;</span> || s == <span class="string">&quot;baba&quot;</span> ? <span class="string">&quot;YES\n&quot;</span> : <span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-Binary-Cut"><a href="#D-Binary-Cut" class="headerlink" title="D. Binary Cut"></a>D. Binary Cut</h3><p>将01数组剪切成最少的组，使能够让这些组自由组合后成为一个0全部在前面，1全部在后面的数组。  </p><p>很遗憾我的AC代码被场后Hack数据卡掉了。这里思路就是相邻的1或者0分成一组，这样就分成了很多个1的组合和很多个0的组合，但是有一点需要注意，因为最终我们需要的数组是0在前1在后，所以如果有<code>01</code>出现的话，我们可以少分一组，比如<code>10001</code>我们不是分成三组<code>1</code>、<code>000</code>、<code>1</code>,而是<code>1</code>和<code>0001</code>两组。因为分界点只有一个，所以如果有一个<code>01</code>出现，答案我们减去1即可。  </p><p>同样这题的官方题解也很有趣。他在判断是否有<code>01</code>出现时采用了位运算，<del>而不是像我一样写丑陋的if语句</del>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="type">bool</span> ex = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; (<span class="type">int</span>)(s.<span class="built_in">size</span>()); i++) &#123;</span><br><span class="line">res += (s[i] != s[i + <span class="number">1</span>]);</span><br><span class="line">ex |= (s[i] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i + <span class="number">1</span>] == <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res - ex &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E-Find-the-Car"><a href="#E-Find-the-Car" class="headerlink" title="E. Find the Car"></a>E. Find the Car</h3><p>这题就是很简单的物理里的算速度的题目。给出k个路上的点，然后给出到达每个点的时间，其中设定每两点之间的速度是常数，也就是每一段路都是匀速。我们需要找到到达某一个点（不一定是给出的点）所花费的时间。但是比赛时我以为给出的时间是前一个点到下一个点的时间，所以用前缀和算的时间，样例竟然都过了。。。。注意我们要先用二分找到问的点是哪两个已知点之间。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n,k,q;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;k&gt;&gt;q;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>&gt; <span class="title">a</span><span class="params">(k+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>&gt; <span class="title">b</span><span class="params">(k+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>&gt; <span class="title">sum</span><span class="params">(k+<span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">            cin&gt;&gt;b[i];</span><br><span class="line">            sum[i]=sum[i<span class="number">-1</span>]+b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="type">int</span> pos;</span><br><span class="line">            cin&gt;&gt;pos;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">1</span>,r=k;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[mid]&gt;=pos)&#123;</span><br><span class="line">                    r=mid;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    l=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">            b[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">            sum[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">            l--;</span><br><span class="line">            <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ans= <span class="number">0</span>;</span><br><span class="line">            ans = b[l]+((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)pos-a[l])*(b[r]-b[l])/(a[r]-a[l]);</span><br><span class="line">            cout&lt;&lt;ans&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-Circle-Perimeter"><a href="#F-Circle-Perimeter" class="headerlink" title="F. Circle Perimeter"></a>F. Circle Perimeter</h3><p>在笛卡尔坐标系中找到与原点的直线距离大于r小于r+1的点的个数。  </p><p>因为数据很大不能纯暴力找。坐标系都是对称的，所以只需要算第一象限加y轴或者x轴然后答案x4即可。  </p><p>官方题解的意思是x轴0到1遍历，先将y坐标设置为r。显然x只会越来越大，如果想要满足要求y就必须越来越小。先将y控制到点到原点距离小于r+1的高度，然后y继续减的同时ans++，直到距离小于r，x增加后继续此操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> r;</span><br><span class="line">    cin &gt;&gt; r;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> height = r;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">long</span> <span class="type">long</span> i = <span class="number">0</span>; i &lt;= r; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(i*i+height*height &gt;= (r+<span class="number">1</span>)*(r+<span class="number">1</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            height--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> cop = height;</span><br><span class="line">        <span class="keyword">while</span>(i*i+cop*cop &gt;= r*r &amp;&amp; cop &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cop--;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans*<span class="number">4</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G-XOUR"><a href="#G-XOUR" class="headerlink" title="G. XOUR"></a>G. XOUR</h3><p>这题就是给你n个数字，如果两个数之间XOR操作后小于等于4，那么这两个数是可以换位置的。求换位后字典序最小的数列。  </p><p>先把所有数字以二进制的方式看待，不难发现如果两个数XOR操作后如果小于等于4，说明除了后两位，其他位置的0或者1是完全一样的，这样才能让前面的数异或后变成0。我们需要把所有除了后两位前面位全部相同的数字分到一个组里面，这样一个组里面的数字位置是可以随意互换的。</p><p>官方题解非常巧妙地运用了C++的STL。使用了一个map，key是<code>a[i]&gt;&gt;2</code>，value是一个<code>priority_queue</code>，这样就可以将所有前面位一样的存在一个优先队列里面。在取数字的时候，排在队列前面的就是一个组里面字典序最小的数字。注意，优先队列默认是大根堆，所以我们需要存的是每个数的相反数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    map&lt;<span class="type">int</span>, priority_queue&lt;<span class="type">int</span>&gt;&gt; mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        mp[a[i]&gt;&gt;<span class="number">2</span>].<span class="built_in">push</span>(-a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; -mp[a[i]&gt;&gt;<span class="number">2</span>].<span class="built_in">top</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        mp[a[i]&gt;&gt;<span class="number">2</span>].<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="H-±1"><a href="#H-±1" class="headerlink" title="H. ±1"></a>H. ±1</h3><p>这是一个关于<a href="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem">SAT</a>的题目，暂时不会。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Codeforces-Round-944-Div-4-回顾&quot;&gt;&lt;a href=&quot;#Codeforces-Round-944-Div-4-回顾&quot; class=&quot;headerlink&quot; title=&quot;Codeforces Round 944 (Div. 4)</summary>
        
      
    
    
    
    <category term="算法题" scheme="https://blog.whff521.xyz/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="Codeforces" scheme="https://blog.whff521.xyz/tags/Codeforces/"/>
    
  </entry>
  
  <entry>
    <title>安装完整版Xcode后我的C++万能库不见了</title>
    <link href="https://blog.whff521.xyz/2024/05/11/%E5%AE%89%E8%A3%85%E5%AE%8C%E6%95%B4%E7%89%88Xcode%E5%90%8E%E6%88%91%E7%9A%84C-%E4%B8%87%E8%83%BD%E5%BA%93%E4%B8%8D%E8%A7%81%E4%BA%86/"/>
    <id>https://blog.whff521.xyz/2024/05/11/%E5%AE%89%E8%A3%85%E5%AE%8C%E6%95%B4%E7%89%88Xcode%E5%90%8E%E6%88%91%E7%9A%84C-%E4%B8%87%E8%83%BD%E5%BA%93%E4%B8%8D%E8%A7%81%E4%BA%86/</id>
    <published>2024-05-11T07:50:18.000Z</published>
    <updated>2024-05-11T08:08:07.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装完整版Xcode后我的C-万能库不见了"><a href="#安装完整版Xcode后我的C-万能库不见了" class="headerlink" title="安装完整版Xcode后我的C++万能库不见了"></a>安装完整版Xcode后我的C++万能库不见了</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天因为安装了<code>flutter</code>的原因，因为这个需要完整版<code>Xcode</code>，之前都是安装的命令行版本的，所以直接去苹果应用商店安装了。但是万万没想到的是，完整版<code>Xcode</code>竟然更改了我使用的<code>Clang</code>地址。他更改到了<code>Applications</code>文件夹下的完整版<code>Xcode</code>里面。看来是<code>Xcode</code>自带了<code>Clang</code>然后就直接更改了默认地址。  </p><p>好巧不巧昨天<code>codeforces Round 944</code>开赛前三分钟我才发现了问题。因为我的万能库引用不能用了。还好我有在博客写过<a href="https://blog.whff521.xyz/2024/04/13/mac%E7%94%B5%E8%84%91vscode%E7%9A%84c-%E8%BF%90%E8%A1%8C%E9%85%8D%E7%BD%AE/">mac电脑vscode的c++运行配置</a>。所以只花了五分钟就添加好了万能库文件。不过我所经历的和上篇文章有所不同。所以在此记录一下。  </p><h2 id="在完整Xcode里添加万能库文件"><a href="#在完整Xcode里添加万能库文件" class="headerlink" title="在完整Xcode里添加万能库文件"></a>在完整<code>Xcode</code>里添加万能库文件</h2><ol><li>同样是在终端里输入<code>echo | g++ -v -x c++ -E -</code>, 其中<code>/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include</code>是我们要修改的路径。</li><li>修改include文件夹的访问权限为读写。<code>sudo chmod 777 /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include</code>。</li><li>创建<code>bits</code>文件夹并进入。<code>mkdir bits</code>, <code>cd bits/</code>。这里电脑会提示消息，因为我终端用的是<code>Iterm2</code>，提示我这个软件想要修改<code>Applications</code>文件里的东西，是否给权限，点开消息在设置里允许就可以。</li><li>创建<code>stdc++.h</code>，<code>touch stdc++.h</code></li><li>这里如果直接 <code>open stdc++.h</code> 的话会发现默认是<code>Xcode</code>打开的，想使用<code>Vscode</code>打开使用<code>code stdc++.h</code>即可。同样系统会消息提示是否给权限修改，选择允许即可。</li><li>将代码复制粘帖即可。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++ includes used for precompiling -*- C++ -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// Copyright (C) 2003-2014 Free Software Foundation, Inc.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This file is part of the GNU ISO C++ Library.  This library is free</span></span><br><span class="line"><span class="comment">// software; you can redistribute it and/or modify it under the</span></span><br><span class="line"><span class="comment">// terms of the GNU General Public License as published by the</span></span><br><span class="line"><span class="comment">// Free Software Foundation; either version 3, or (at your option)</span></span><br><span class="line"><span class="comment">// any later version.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// This library is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment">// GNU General Public License for more details.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// Under Section 7 of GPL version 3, you are granted additional</span></span><br><span class="line"><span class="comment">// permissions described in the GCC Runtime Library Exception, version</span></span><br><span class="line"><span class="comment">// 3.1, as published by the Free Software Foundation.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// You should have received a copy of the GNU General Public License and</span></span><br><span class="line"><span class="comment">// a copy of the GCC Runtime Library Exception along with this program;</span></span><br><span class="line"><span class="comment">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span></span><br><span class="line"><span class="comment">// &lt;http://www.gnu.org/licenses/&gt;.</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/** @file stdc++.h</span></span><br><span class="line"><span class="comment"> *  This is an implementation file for a precompiled header.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 17.4.1.2 Headers</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// C</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _GLIBCXX_NO_ASSERT</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cerrno&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ciso646&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clocale&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;csetjmp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;csignal&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdarg&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstddef&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt;= 201103L</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ccomplex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cfenv&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cinttypes&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdbool&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdint&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctgmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cwchar&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cwctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// C++</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;exception&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ios&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iosfwd&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;istream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;locale&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;new&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdexcept&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;streambuf&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;typeinfo&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;valarray&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt;= 201103L</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;array&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;atomic&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;condition_variable&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;forward_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;future&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;initializer_list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ratio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;regex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;scoped_allocator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;system_error&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tuple&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;typeindex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>因为是直接在应用文件夹里改的，不知道以后更新软件后会不会消失，不过到时候在说吧，添加方法也比较简单。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;安装完整版Xcode后我的C-万能库不见了&quot;&gt;&lt;a href=&quot;#安装完整版Xcode后我的C-万能库不见了&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="计算机相关" scheme="https://blog.whff521.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="mac" scheme="https://blog.whff521.xyz/tags/mac/"/>
    
  </entry>
  
</feed>
