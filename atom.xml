<feed xmlns="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0">
<title>AiRomance</title>

<icon>https://blog.whff521.xyz/images/101.jpg</icon>
 
<subtitle>又遇到什么好事了吗？</subtitle>

<link href="https://blog.whff521.xyz/atom.xml" rel="self"/>

<link href="https://pubsubhubbub.appspot.com/" rel="hub"/>

<link href="https://blog.whff521.xyz/"/>
<updated>2024-04-23T09:20:28.502Z</updated>
<id>https://blog.whff521.xyz/</id>

<author>
<name>AiRomance</name>

</author>

<generator uri="https://hexo.io/">Hexo</generator>
<webfeeds:cover image="https://cdn.jsdelivr.net/gh/hayschan/static@master/2020/12/gFn7zm.JPG"/>
<webfeeds:icon>https://cdn.jsdelivr.net/gh/hayschan/static@master/2020/12/VAlBPs.png</webfeeds:icon>
<webfeeds:logo>https://cdn.jsdelivr.net/gh/hayschan/static@master/2020/12/XDzm9G.svg</webfeeds:logo>
<webfeeds:accentColor>0abab5</webfeeds:accentColor>
<webfeeds:related layout="card" target="browser"/>

<entry>
<title>为博客添加RSS，sitemap和本地搜索</title>
<link href="https://blog.whff521.xyz/2024/04/23/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0RSS%EF%BC%8Csitemap%E5%92%8C%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2/"/>
<id>https://blog.whff521.xyz/2024/04/23/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0RSS%EF%BC%8Csitemap%E5%92%8C%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2/</id>
<published>2024-04-23T09:17:40.000Z</published>
<updated>2024-04-23T09:20:28.502Z</updated>

<content type="html">
<![CDATA[ <h1 id="博客的一些配置总结"><a href="#博客的一些配置总结" class="headerlink" title="博客的一些配置总结"></a>博客的一些配置总结</h1><h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>在<code>_config.yml</code> 里添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line">  <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span></span><br></pre></td></tr></table></figure><p>其中<code>limit</code>指源里保存的文章个数，<code>content_limit</code>指summary的长度。<br>如果想要添加RSS图标，可在<code>butterfly</code>主题配置文件<code>_config.yml</code>里，<code>social:</code>后添加<code>fas fa-rss: /atom.xml || RSS || &#39;#f26522&#39;</code>,这样RSS图标就会出现在右边头像下边</p><h2 id="添加sitemap"><a href="#添加sitemap" class="headerlink" title="添加sitemap"></a>添加sitemap</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>根目录<code>_config.yml</code>里添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-sitemap</span></span><br></pre></td></tr></table></figure><p>配置成功标志：generate后生成<code>sitemap.xml</code></p><h2 id="添加本地搜索"><a href="#添加本地搜索" class="headerlink" title="添加本地搜索"></a>添加本地搜索</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>我用的<code>butterfly</code>主题，直接在主题配置文件里更改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure> ]]>
</content>
     
<summary type="html">&lt;h1 id=&quot;博客的一些配置总结&quot;&gt;&lt;a href=&quot;#博客的一些配置总结&quot; class=&quot;headerlink&quot; title=&quot;博客的一些配置总结&quot;&gt;&lt;/a&gt;博客的一些配置总结&lt;/h1&gt;&lt;h2 id=&quot;添加RSS&quot;&gt;&lt;a href=&quot;#添加RSS&quot;</summary>
    
<category term="计算机相关" scheme="https://blog.whff521.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/"/>
 
<category term="hexo" scheme="https://blog.whff521.xyz/tags/hexo/"/>

<category term="butterfly" scheme="https://blog.whff521.xyz/tags/butterfly/"/>

</entry>

<entry>
<title>Project 0: 2048</title>
<link href="https://blog.whff521.xyz/2024/04/22/Project-0-2048/"/>
<id>https://blog.whff521.xyz/2024/04/22/Project-0-2048/</id>
<published>2024-04-22T08:48:45.000Z</published>
<updated>2024-04-22T08:57:15.976Z</updated>

<content type="html">
<![CDATA[ <h1 id="Project-0-2048"><a href="#Project-0-2048" class="headerlink" title="Project 0: 2048"></a><a href="https://sp21.datastructur.es/materials/proj/proj0/proj0">Project 0: 2048</a></h1><p>在这里贴一个线上2048的网站，<a href="https://play2048.co/">link</a><br><strong>整体代码仓库：<a href="https://github.com/WHFF521/skeleton-sp21">github</a></strong></p><h2 id="TASK-1-emptySpaceExists-Board-b"><a href="#TASK-1-emptySpaceExists-Board-b" class="headerlink" title="TASK 1: emptySpaceExists(Board b)"></a>TASK 1: emptySpaceExists(Board b)</h2><p>简单来说就是检测面板上是否还有没有数的地方。直接O(n)遍历。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Returns true if at least one space on the Board is empty.</span></span><br><span class="line"><span class="comment"> *  Empty spaces are stored as null.</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">emptySpaceExists</span><span class="params">(Board b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> b.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(b.tile(i,j)==<span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TASK-2-maxTileExists-Board-b"><a href="#TASK-2-maxTileExists-Board-b" class="headerlink" title="TASK 2: maxTileExists(Board b)"></a>TASK 2: maxTileExists(Board b)</h2><p>是否有数字已经等于2048。和上面一样遍历即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns true if any tile is equal to the maximum valid value.</span></span><br><span class="line"><span class="comment"> * Maximum valid value is given by MAX_PIECE. Note that</span></span><br><span class="line"><span class="comment"> * given a Tile object t, we get its value with t.value().</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">maxTileExists</span><span class="params">(Board b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> b.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(b.tile(i,j)==<span class="literal">null</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(b.tile(i,j).value()==MAX_PIECE) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TASK-3-atLeastOneMoveExists-Board-b"><a href="#TASK-3-atLeastOneMoveExists-Board-b" class="headerlink" title="TASK 3: atLeastOneMoveExists(Board b)"></a>TASK 3: atLeastOneMoveExists(Board b)</h2><p>用户起码还能再走一步的检测函数。首先就是如果有空格子一定可以走，其次是如果有相邻的数相同也可以走。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns true if there are any valid moves on the board.</span></span><br><span class="line"><span class="comment"> * There are two ways that there can be valid moves:</span></span><br><span class="line"><span class="comment"> * 1. There is at least one empty space on the board.</span></span><br><span class="line"><span class="comment"> * 2. There are two adjacent tiles with the same value.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">atLeastOneMoveExists</span><span class="params">(Board b)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] dx = &#123;<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span>[] dy = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> b.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(b.tile(i,j)==<span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; <span class="number">4</span>; k++) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> i+dx[k];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> j+dy[k];</span><br><span class="line">                    <span class="keyword">if</span>(x&lt;<span class="number">0</span>||x&gt;=length||y&lt;<span class="number">0</span>||y&gt;=length) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">if</span>(b.tile(x,y)==<span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span>(b.tile(x,y).value()==b.tile(i,j).value()) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TASK4-Main-Task-Building-the-Game-Logic"><a href="#TASK4-Main-Task-Building-the-Game-Logic" class="headerlink" title="TASK4: Main Task: Building the Game Logic"></a>TASK4: Main Task: Building the Game Logic</h2><p>最主要的逻辑部分。主要实现了根据不同方向进行<code>move</code>操作，使得数字向指定方向移动并合并。<br>主要规则：  </p><ul><li>在一次整体移动中，如果两个数合并过了，那么就不能和其他数字进行合并。</li><li>每一次合并得到的值也是玩家得到的分数。</li></ul><p><strong>解决方案：</strong>  </p><ol><li>分四个方向进行，先完成<code>NORTH</code>方向的移动，其他方向照猫画虎即可。</li><li>根据移动方向选择遍历的次序，如向上移动，我们需要从最上方一行进行遍历，移动后保证最上方没有空格子出现。</li><li>对于已经合并的位置进行标记，用<code>merge[][]</code>进行了标记。</li><li>对于每个已经移动的方块，要及时<code>break</code>退出</li><li>由于向指定方向移动的时候只有在搜索到有数字的格子才进行判断并移动，用<code>nullTileRow</code>和<code>nullTileCol</code>进行记录空格子的位置，防止格子的指定方向上只有空格子的方向而没有进行移动的情况发生。</li><li>每当<code>move</code>执行都要更改<code>changed</code>为<code>true</code>。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Tilt the board toward SIDE. Return true iff this changes the board.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 1. If two Tile objects are adjacent in the direction of motion and have</span></span><br><span class="line"><span class="comment"> *    the same value, they are merged into one Tile of twice the original</span></span><br><span class="line"><span class="comment"> *    value and that new value is added to the score instance variable</span></span><br><span class="line"><span class="comment"> * 2. A tile that is the result of a merge will not merge again on that</span></span><br><span class="line"><span class="comment"> *    tilt. So each move, every tile will only ever be part of at most one</span></span><br><span class="line"><span class="comment"> *    merge (perhaps zero).</span></span><br><span class="line"><span class="comment"> * 3. When three adjacent tiles in the direction of motion have the same</span></span><br><span class="line"><span class="comment"> *    value, then the leading two tiles in the direction of motion merge,</span></span><br><span class="line"><span class="comment"> *    and the trailing tile does not.</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">tilt</span><span class="params">(Side side)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> changed;</span><br><span class="line">    changed = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Modify this.board (and perhaps this.score) to account</span></span><br><span class="line">    <span class="comment">// for the tilt to the Side SIDE. If the board changed, set the</span></span><br><span class="line">    <span class="comment">// changed local variable to true.</span></span><br><span class="line">    <span class="type">boolean</span>[][] merge = <span class="keyword">new</span> <span class="title class_">boolean</span>[board.size()][board.size()];</span><br><span class="line">    <span class="keyword">if</span>(side==Side.NORTH)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; board.size(); col++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> board.size()-<span class="number">1</span>; row &gt;= <span class="number">0</span>; row--)&#123;</span><br><span class="line">                <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);</span><br><span class="line">                <span class="keyword">if</span>(t!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> nullTileRow=row;</span><br><span class="line">                    <span class="type">boolean</span> tchanged=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> row+<span class="number">1</span>; k &lt;=<span class="number">3</span>; k++)&#123;</span><br><span class="line">                        <span class="type">Tile</span> <span class="variable">above</span> <span class="operator">=</span> board.tile(col, k);</span><br><span class="line">                        <span class="keyword">if</span>(above==<span class="literal">null</span>)&#123;</span><br><span class="line">                            nullTileRow = k;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(above.value()!=t.value()||merge[col][k])&#123;</span><br><span class="line">                                <span class="keyword">if</span>(k-<span class="number">1</span>!=row)&#123;</span><br><span class="line">                                    board.move(col,k-<span class="number">1</span>,t);</span><br><span class="line">                                    changed = <span class="literal">true</span>;</span><br><span class="line">                                    tchanged=<span class="literal">true</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                board.move(col,k,t);</span><br><span class="line">                                merge[col][k]=<span class="literal">true</span>;</span><br><span class="line">                                <span class="built_in">this</span>.score += t.value()*<span class="number">2</span>;</span><br><span class="line">                                changed = <span class="literal">true</span>;</span><br><span class="line">                                tchanged=<span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!tchanged)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(nullTileRow!=row) &#123;</span><br><span class="line">                            board.move(col,nullTileRow,t);</span><br><span class="line">                            changed = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(side==Side.SOUTH)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; board.size(); col++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; board.size(); row++)&#123;</span><br><span class="line">                <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);</span><br><span class="line">                <span class="keyword">if</span>(t!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> nullTileRow=row;</span><br><span class="line">                    <span class="type">boolean</span> tchanged=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> row-<span class="number">1</span>; k &gt;=<span class="number">0</span>; k--)&#123;</span><br><span class="line">                        <span class="type">Tile</span> <span class="variable">above</span> <span class="operator">=</span> board.tile(col, k);</span><br><span class="line">                        <span class="keyword">if</span>(above==<span class="literal">null</span>)&#123;</span><br><span class="line">                            nullTileRow = k;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(above.value()!=t.value()||merge[col][k])&#123;</span><br><span class="line">                                <span class="keyword">if</span>(k+<span class="number">1</span>!=row)&#123;</span><br><span class="line">                                    board.move(col,k+<span class="number">1</span>,t);</span><br><span class="line">                                    changed = <span class="literal">true</span>;</span><br><span class="line">                                    tchanged=<span class="literal">true</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                board.move(col,k,t);</span><br><span class="line">                                merge[col][k]=<span class="literal">true</span>;</span><br><span class="line">                                <span class="built_in">this</span>.score += t.value()*<span class="number">2</span>;</span><br><span class="line">                                changed = <span class="literal">true</span>;</span><br><span class="line">                                tchanged=<span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!tchanged)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(nullTileRow!=row) &#123;</span><br><span class="line">                            board.move(col,nullTileRow,t);</span><br><span class="line">                            changed = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(side==Side.WEST)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; board.size(); col++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> board.size()-<span class="number">1</span>; row &gt;= <span class="number">0</span>; row--)&#123;</span><br><span class="line">                <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);</span><br><span class="line">                <span class="keyword">if</span>(t!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> nullTileCol=col;</span><br><span class="line">                    <span class="type">boolean</span> tchanged=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> col-<span class="number">1</span>; k &gt;= <span class="number">0</span>; k--)&#123;</span><br><span class="line">                        <span class="type">Tile</span> <span class="variable">above</span> <span class="operator">=</span> board.tile(k, row);</span><br><span class="line">                        <span class="keyword">if</span>(above==<span class="literal">null</span>)&#123;</span><br><span class="line">                            nullTileCol = k;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(above.value()!=t.value()||merge[k][row])&#123;</span><br><span class="line">                                <span class="keyword">if</span>(k+<span class="number">1</span>!=col)&#123;</span><br><span class="line">                                    board.move(k+<span class="number">1</span>,row,t);</span><br><span class="line">                                    changed = <span class="literal">true</span>;</span><br><span class="line">                                    tchanged=<span class="literal">true</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                board.move(k,row,t);</span><br><span class="line">                                merge[k][row]=<span class="literal">true</span>;</span><br><span class="line">                                <span class="built_in">this</span>.score += t.value()*<span class="number">2</span>;</span><br><span class="line">                                changed = <span class="literal">true</span>;</span><br><span class="line">                                tchanged=<span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!tchanged)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(nullTileCol!=col) &#123;</span><br><span class="line">                            board.move(nullTileCol,row,t);</span><br><span class="line">                            changed = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(side==Side.EAST)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> board.size()-<span class="number">1</span>; col &gt;= <span class="number">0</span>; col--)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> board.size()-<span class="number">1</span>; row &gt;= <span class="number">0</span>; row--)&#123;</span><br><span class="line">                <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);</span><br><span class="line">                <span class="keyword">if</span>(t!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> nullTileCol=col;</span><br><span class="line">                    <span class="type">boolean</span> tchanged=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> col+<span class="number">1</span>; k &lt; board.size(); k++)&#123;</span><br><span class="line">                        <span class="type">Tile</span> <span class="variable">above</span> <span class="operator">=</span> board.tile(k, row);</span><br><span class="line">                        <span class="keyword">if</span>(above==<span class="literal">null</span>)&#123;</span><br><span class="line">                            nullTileCol = k;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(above.value()!=t.value()||merge[k][row])&#123;</span><br><span class="line">                                <span class="keyword">if</span>(k-<span class="number">1</span>!=col)&#123;</span><br><span class="line">                                    board.move(k-<span class="number">1</span>,row,t);</span><br><span class="line">                                    changed = <span class="literal">true</span>;</span><br><span class="line">                                    tchanged=<span class="literal">true</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                board.move(k,row,t);</span><br><span class="line">                                merge[k][row]=<span class="literal">true</span>;</span><br><span class="line">                                <span class="built_in">this</span>.score += t.value()*<span class="number">2</span>;</span><br><span class="line">                                changed = <span class="literal">true</span>;</span><br><span class="line">                                tchanged=<span class="literal">true</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(!tchanged)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(nullTileCol!=col) &#123;</span><br><span class="line">                            board.move(nullTileCol,row,t);</span><br><span class="line">                            changed = <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    checkGameOver();</span><br><span class="line">    <span class="keyword">if</span> (changed) &#123;</span><br><span class="line">        setChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> changed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这是CS61B 21sp的第0个project，正如老师说的那样，思考过程的重要性是大于代码编写的。我完成这个项目也是花了几个小时的时间（从一开始看描述到完成，估计得6个多小时）。2048作为<code>Oier</code>们喜闻乐见的游戏，没想到我也能进行亲手编写。很期待接下来的project。</p> ]]>
</content>
     
<summary type="html">&lt;h1 id=&quot;Project-0-2048&quot;&gt;&lt;a href=&quot;#Project-0-2048&quot; class=&quot;headerlink&quot; title=&quot;Project 0: 2048&quot;&gt;&lt;/a&gt;&lt;a</summary>
    
<category term="计算机相关" scheme="https://blog.whff521.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/"/>
 
<category term="CS61B 21sp" scheme="https://blog.whff521.xyz/tags/CS61B-21sp/"/>

</entry>

<entry>
<title>shell 相关</title>
<link href="https://blog.whff521.xyz/2024/04/16/shell-%E7%9B%B8%E5%85%B3/"/>
<id>https://blog.whff521.xyz/2024/04/16/shell-%E7%9B%B8%E5%85%B3/</id>
<published>2024-04-16T05:59:23.000Z</published>
<updated>2024-04-16T06:03:26.772Z</updated>

<content type="html">
<![CDATA[ <p><a href="https://youtu.be/Z56Jmr9Z34Q?si=_VH1jttQRmA_-t82">Lecture 1: Course Overview + The Shell (2020)</a><br><a href="https://missing-semester-cn.github.io/2020/course-shell/">对应中文网站</a></p><ul><li><p><code>date</code> 查看时间</p></li><li><p><code>echo Hello\ World</code> 输出Hello World</p></li><li><p><code>echo $path</code>  查看电脑有哪些路径</p></li><li><p><code>which echo</code>  查看echo命令会执行哪里的文件</p></li><li><p><code>pwd</code> Print Working Directory，即打印当前工作目录</p></li><li><p><code>cd ./home</code>  打开当前目录下home文件夹</p></li><li><p><code>ls</code> “list” 的缩写，表示列出目录中的文件和子目录</p></li><li><p><code>cd</code> ||<code>cd ~</code>  take you home </p></li><li><p><code>cd -</code>  返回刚才所在文件夹，常用于cd ~ 后</p></li><li><p><code>ls -l</code> 长格式显示目录内容,包括文件权限、所有者、文件大小、最后修改时间等</p></li><li><p><code>mv file.txt newfile.txt</code> 重新命名文件</p></li><li><p><code>mv file.txt directory/</code> 移动文件到指定目录中</p></li><li><p><code>cp file.txt directory/</code> 复制文件到指定文件夹</p></li><li><p><code>cp file.txt directory/newfile.txt</code> 复制文件到指定文件夹并重命名</p></li><li><p><code>rm file.txt</code> 删除指定文件，不能删除文件夹及里面的内容</p></li><li><p><code>rm -r directory</code> 删除指定文件夹及其内容，能进行递归删除</p></li><li><p><code>rmdir</code> 仅能删除空文件夹</p></li><li><p><code>mkdir My\ Photos</code> 创建My Photos文件夹，或者用双引号包围带空格的名称</p><ul><li><code>mkdir My Photos</code> 创建My文件夹和Photos文件夹</li></ul></li><li><p><code>ctrl</code>+<code>l</code> clear your terminal and go back to the top</p></li><li><p><code>&gt; file</code>和<code>&lt; file</code><br>  <code>&gt; file</code> 和 <code>&lt;file</code> 重定向符号，用于输入和输出文件。</p><ul><li><p><code>&gt;</code> 符号用于将命令的输出重定向到一个文件中。例如，<code>ls &gt; file.txt</code> 将 <code>ls</code> 命令的输出写入到 <code>file.txt</code> 文件中，如果文件不存在则创建，如果文件已经存在则覆盖原有内容。</p></li><li><p><code>&lt;</code> 符号用于将一个文件的内容作为输入提供给命令。例如，<code>cat &lt; file.txt</code> 将 <code>file.txt</code> 文件的内容作为 <code>cat</code> 命令的输入，<code>cat</code> 命令会将文件的内容输出到终端上。</p></li></ul></li><li><p><code>cat filename</code> 显示一个文件的内容。  </p><ul><li><code>cat</code> 命令还有一些常用的选项，例如 <code>-n</code> 选项用于显示行号，<code>-b</code> 选项用于显示非空行的行号，<code>-E</code> 选项用于在每行的末尾显示一个 <code>$</code> 符号等。</li><li><code>cat &lt; hello.txt &gt; hello2.txt</code> 将<code>hello.txt</code>的内容覆盖写入<code>hello2.txt</code><br>  -<code>cat &lt; hello.txt &gt;&gt; hello2.txt</code> 将内容append到<code>hello2.txt</code></li></ul></li><li><p><code>ls -l | tail -n1</code> 其中 <code>|</code> 组成命令行管道，用于将一个命令的输出作为另一个命令的输入</p></li><li><p><code>sudo su</code> 切换为root用户</p></li></ul> ]]>
</content>
     
<summary type="html">&lt;p&gt;&lt;a href=&quot;https://youtu.be/Z56Jmr9Z34Q?si=_VH1jttQRmA_-t82&quot;&gt;Lecture 1: Course Overview + The Shell (2020)&lt;/a&gt;&lt;br&gt;&lt;a</summary>
    
<category term="计算机相关" scheme="https://blog.whff521.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/"/>
 
<category term="shell" scheme="https://blog.whff521.xyz/tags/shell/"/>

</entry>

<entry>
<title>tarjan算法</title>
<link href="https://blog.whff521.xyz/2024/04/15/tarjan%E7%AE%97%E6%B3%95/"/>
<id>https://blog.whff521.xyz/2024/04/15/tarjan%E7%AE%97%E6%B3%95/</id>
<published>2024-04-15T03:45:12.000Z</published>
<updated>2024-04-15T03:49:26.044Z</updated>

<content type="html">
<![CDATA[ <h1 id="tarjan-算法（Tarjan’s-strongly-connected-components-algorithm）"><a href="#tarjan-算法（Tarjan’s-strongly-connected-components-algorithm）" class="headerlink" title="tarjan 算法（Tarjan’s strongly connected components algorithm）"></a>tarjan 算法（Tarjan’s strongly connected components algorithm）</h1><p><a href="https://youtu.be/wUgWX0nc4NY?si=pbuZzimi3Nep-z36">很棒的解释视频</a></p><h2 id="简述算法"><a href="#简述算法" class="headerlink" title="简述算法"></a>简述算法</h2><p>Tarjan 算法是一种用于查找图中强连通分量的算法，由 Robert Tarjan 在 1972 年提出。强连通分量是指在有向图中，如果从顶点 u 到顶点 v 以及从顶点 v 到顶点 u 都存在一条路径，那么顶点 u 和顶点 v 是强连通的。</p><p>Tarjan 算法的核心思想是通过深度优先搜索（DFS）遍历图，并使用堆栈来追踪搜索过程中的顶点。在遍历的过程中，对每个顶点进行标记，记录其在搜索树中的深度和最小后向边的深度。如果发现某个顶点的后继节点指向了一个已经被访问过的顶点，那么这个顶点及其所有后继节点构成一个强连通分量。</p><p>Tarjan 算法的关键点在于维护一个栈，用来保存正在搜索的节点。当 DFS 遍历过程中发现一个节点的所有后继节点已经搜索完毕，并且该节点是当前 DFS 搜索树中的根节点时，可以将该节点以及其所有后继节点弹出栈，并将它们标记为一个强连通分量。</p><p>Tarjan 算法的时间复杂度为 O(V + E)，其中 V 表示图中的顶点数，E 表示图中的边数。由于只需要一次 DFS 遍历即可找到所有的强连通分量，因此 Tarjan 算法是一种高效的强连通分量查找算法。</p><h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>首先什么是<strong>强连通分量</strong>。就是有向图中一些点，如果每两个点之间互相都有一条到达对方的道路，那么这些点就组成了强连通分量（Strongly Connected Component，简称 SCC）。  </p><p>我们可以想象为每一个SCC就是一个家庭，如果送报纸的话只需要给家庭中任意一个人就行了，因为他们每个人都可以在看完报纸后递给另一个家人。显然我们可以进行<strong>缩点</strong>了。从之前人与人之间的联系上升到家庭与家庭之间的关系。但是因为是有向图，SCC之间可能有边相连，但是是单向的，所以家庭之间并不能合并为同一个SCC。但是在一个家庭所有成员读完报纸后可以委托一个有出边的人去把报纸给邻居（另一个SCC）。  </p><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>在此并不证明算法的正确性。现在只聊一聊算法是怎么实现的。  </p><p>首先就是<code>dfn[]</code>和<code>low[]</code>数组。对于图的遍历选择dfs（Depth-First Search）。<code>dfn[]</code>数组记录遍历点的次序。通常为每遍历到一个点，计数器+1，此点的<code>dfn</code>值即为计数器的值。而<code>low[]</code>数组则为记录该点以及其子节点最小的<code>dfn</code>值。  </p><p>如果我们想要知道每个SCC中成员都有谁，那么我们需要在遍历点的同时再将点压入栈<code>stack s</code>内。同时我们需要知道该点是否在栈内，定义一个记录数组<code>onStack[]</code>,如果节点<code>i</code>在栈内，那么<code>onStack[i]=1</code>。如果点的标值不是从<code>1~n</code>连续的，可能需要<code>hash</code>处理。</p><p>那么我们在回过头讨论<code>dfn</code>和<code>low</code>。对于不在栈内的节点，我们直接<code>low[u]=min(low[u],low[v])</code>进行更新。其中<code>u</code>为当前节点，<code>v</code>为<code>u</code>的子节点。对于已经在栈内的子节点，我们通过<code>low[u]=min(low[u],dfn[v])</code>更新。我们可以想象有向图中边一直往前冲，突然有一个边是往回走的，这样就会连接到刚才已经遍历过的点（可能形成一个环），但是这种边我们需要判断是否连接到了另一个SCC，所以我们需要记录点是否在栈内，如果在栈内说明两个点属于同一个SCC，所以可以更新，如果不在，就不能更新当前点的<code>low</code>值。  </p><p><strong>数据出栈</strong>。对于遍历完所有子节点的点来说，如果<code>dfn[u]==low[u]</code>那么说明这是一个SCC。栈内点一个个出栈直到当前点出栈，出栈的所有点即为一个SCC的所有点。定义<code>sccs[]</code>数组记录点所属于的SCC。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="java"><a href="#java" class="headerlink" title="java"></a>java</h3><p><a href="https://github.com/williamfiset/Algorithms/blob/da50861a53fc2f6642cfc7d82c285166f41d03e2/src/main/java/com/williamfiset/algorithms/graphtheory/TarjanSccSolverAdjacencyList.java">摘自github</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * An implementation of Tarjan&#x27;s Strongly Connected Components algorithm using an adjacency list.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Verified against:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> *   &lt;li&gt;https://open.kattis.com/problems/equivalences</span></span><br><span class="line"><span class="comment"> *   &lt;li&gt;https://open.kattis.com/problems/runningmom</span></span><br><span class="line"><span class="comment"> *   &lt;li&gt;https://www.hackerearth.com/practice/algorithms/graphs/strongly-connected-components/tutorial</span></span><br><span class="line"><span class="comment"> * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Time complexity: O(V+E)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> William Fiset, william.alexandre.fiset@gmail.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.williamfiset.algorithms.graphtheory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.min;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TarjanSccSolverAdjacencyList</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> n;</span><br><span class="line">  <span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; graph;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> solved;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> sccCount, id;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span>[] visited;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span>[] ids, low, sccs;</span><br><span class="line">  <span class="keyword">private</span> Deque&lt;Integer&gt; stack;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">UNVISITED</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">TarjanSccSolverAdjacencyList</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; graph)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (graph == <span class="literal">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Graph cannot be null.&quot;</span>);</span><br><span class="line">    n = graph.size();</span><br><span class="line">    <span class="built_in">this</span>.graph = graph;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Returns the number of strongly connected components in the graph.</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sccCount</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!solved) solve();</span><br><span class="line">    <span class="keyword">return</span> sccCount;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Get the connected components of this graph. If two indexes</span></span><br><span class="line">  <span class="comment">// have the same value then they&#x27;re in the same SCC.</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span>[] getSccs() &#123;</span><br><span class="line">    <span class="keyword">if</span> (!solved) solve();</span><br><span class="line">    <span class="keyword">return</span> sccs;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (solved) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    ids = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">    low = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">    sccs = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">    visited = <span class="keyword">new</span> <span class="title class_">boolean</span>[n];</span><br><span class="line">    stack = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;&gt;();</span><br><span class="line">    Arrays.fill(ids, UNVISITED);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (ids[i] == UNVISITED) &#123;</span><br><span class="line">        dfs(i);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    solved = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> at)</span> &#123;</span><br><span class="line">    ids[at] = low[at] = id++;</span><br><span class="line">    stack.push(at);</span><br><span class="line">    visited[at] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> to : graph.get(at)) &#123;</span><br><span class="line">      <span class="keyword">if</span> (ids[to] == UNVISITED) &#123;</span><br><span class="line">        dfs(to);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (visited[to]) &#123;</span><br><span class="line">        low[at] = min(low[at], low[to]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">       TODO(william): investigate whether the proper way to update the lowlinks</span></span><br><span class="line"><span class="comment">       is the following bit of code. From my experience this doesn&#x27;t seem to</span></span><br><span class="line"><span class="comment">       matter if the output is placed in a separate output array, but this needs</span></span><br><span class="line"><span class="comment">       further investigation.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">       if (ids[to] == UNVISITED) &#123;</span></span><br><span class="line"><span class="comment">         dfs(to);</span></span><br><span class="line"><span class="comment">         low[at] = min(low[at], low[to]);</span></span><br><span class="line"><span class="comment">       &#125;</span></span><br><span class="line"><span class="comment">       if (visited[to]) &#123;</span></span><br><span class="line"><span class="comment">         low[at] = min(low[at], ids[to]);</span></span><br><span class="line"><span class="comment">       &#125;</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// On recursive callback, if we&#x27;re at the root node (start of SCC)</span></span><br><span class="line">    <span class="comment">// empty the seen stack until back to root.</span></span><br><span class="line">    <span class="keyword">if</span> (ids[at] == low[at]) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">node</span> <span class="operator">=</span> stack.pop(); ; node = stack.pop()) &#123;</span><br><span class="line">        visited[node] = <span class="literal">false</span>;</span><br><span class="line">        sccs[node] = sccCount;</span><br><span class="line">        <span class="keyword">if</span> (node == at) <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      sccCount++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Initializes adjacency list with n nodes.</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">createGraph</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; graph = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) graph.add(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">    <span class="keyword">return</span> graph;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Adds a directed edge from node &#x27;from&#x27; to node &#x27;to&#x27;</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addEdge</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; graph, <span class="type">int</span> from, <span class="type">int</span> to)</span> &#123;</span><br><span class="line">    graph.get(from).add(to);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Example usage: */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] arg)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; graph = createGraph(n);</span><br><span class="line"></span><br><span class="line">    addEdge(graph, <span class="number">6</span>, <span class="number">0</span>);</span><br><span class="line">    addEdge(graph, <span class="number">6</span>, <span class="number">2</span>);</span><br><span class="line">    addEdge(graph, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    addEdge(graph, <span class="number">6</span>, <span class="number">4</span>);</span><br><span class="line">    addEdge(graph, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    addEdge(graph, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    addEdge(graph, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">    addEdge(graph, <span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line">    addEdge(graph, <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">    addEdge(graph, <span class="number">7</span>, <span class="number">5</span>);</span><br><span class="line">    addEdge(graph, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    addEdge(graph, <span class="number">7</span>, <span class="number">3</span>);</span><br><span class="line">    addEdge(graph, <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">TarjanSccSolverAdjacencyList</span> <span class="variable">solver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TarjanSccSolverAdjacencyList</span>(graph);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[] sccs = solver.getSccs();</span><br><span class="line">    Map&lt;Integer, List&lt;Integer&gt;&gt; multimap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!multimap.containsKey(sccs[i])) multimap.put(sccs[i], <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">      multimap.get(sccs[i]).add(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Prints:</span></span><br><span class="line">    <span class="comment">// Number of Strongly Connected Components: 3</span></span><br><span class="line">    <span class="comment">// Nodes: [0, 1, 2] form a Strongly Connected Component.</span></span><br><span class="line">    <span class="comment">// Nodes: [3, 7] form a Strongly Connected Component.</span></span><br><span class="line">    <span class="comment">// Nodes: [4, 5, 6] form a Strongly Connected Component.</span></span><br><span class="line">    System.out.printf(<span class="string">&quot;Number of Strongly Connected Components: %d\n&quot;</span>, solver.sccCount());</span><br><span class="line">    <span class="keyword">for</span> (List&lt;Integer&gt; scc : multimap.values()) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Nodes: &quot;</span> + scc + <span class="string">&quot; form a Strongly Connected Component.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p><a href="https://www.luogu.com.cn/problem/P2002">对应洛谷题目</a><br>如果SCC之间有边相邻，只需通知一个SCC即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mxlen = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> pre[mxlen],last[mxlen/<span class="number">5</span>],other[mxlen],l;</span><br><span class="line"><span class="type">int</span> cnt,sccCount;</span><br><span class="line"><span class="type">int</span> dfn[mxlen/<span class="number">5</span>],low[mxlen/<span class="number">5</span>],onStack[mxlen/<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> sccFlags[mxlen/<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> sccIndice[mxlen/<span class="number">5</span>];</span><br><span class="line">stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    l++;</span><br><span class="line">    pre[l]=last[x];</span><br><span class="line">    last[x]=l;</span><br><span class="line">    other[l]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    dfn[x]=low[x]=cnt;</span><br><span class="line">    onStack[x]=<span class="number">1</span>;</span><br><span class="line">    s.<span class="built_in">push</span>(x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> p=last[x];p;p=pre[p])&#123;</span><br><span class="line">        <span class="type">int</span> y=other[p];</span><br><span class="line">        <span class="keyword">if</span>(!dfn[y])&#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(y);</span><br><span class="line">            low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(onStack[y])&#123;</span><br><span class="line">            low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dfn[x]==low[x])&#123;</span><br><span class="line">        sccCount++;</span><br><span class="line">        <span class="keyword">while</span>(s.<span class="built_in">top</span>()!=x)&#123;</span><br><span class="line">            sccIndice[s.<span class="built_in">top</span>()]=sccCount;</span><br><span class="line">            onStack[s.<span class="built_in">top</span>()]=<span class="number">0</span>;</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        sccIndice[x]=sccCount;</span><br><span class="line">        onStack[x]=<span class="number">0</span>;</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">checkPropagation</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> p=last[i];p;p=pre[p])&#123;</span><br><span class="line">            <span class="type">int</span> y=other[p];</span><br><span class="line">            <span class="keyword">if</span>(sccIndice[i]!=sccIndice[y])&#123;</span><br><span class="line">                sccFlags[sccIndice[y]]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="built_in">add</span>(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i]) <span class="built_in">tarjan</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">checkPropagation</span>();</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=sccCount;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!sccFlags[i]) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> ]]>
</content>
     
<summary type="html">&lt;h1 id=&quot;tarjan-算法（Tarjan’s-strongly-connected-components-algorithm）&quot;&gt;&lt;a href=&quot;#tarjan-算法（Tarjan’s-strongly-connected-components-algorithm）&quot;</summary>
    
<category term="算法题" scheme="https://blog.whff521.xyz/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
 
<category term="tarjan" scheme="https://blog.whff521.xyz/tags/tarjan/"/>

</entry>

<entry>
<title>verbal advantage level 2 1-20</title>
<link href="https://blog.whff521.xyz/2024/04/14/verbal-advantage-level-2-1-20/"/>
<id>https://blog.whff521.xyz/2024/04/14/verbal-advantage-level-2-1-20/</id>
<published>2024-04-14T15:42:58.000Z</published>
<updated>2024-04-15T02:10:31.231Z</updated>

<content type="html">
<![CDATA[ <h1 id="word-1-10"><a href="#word-1-10" class="headerlink" title="word 1-10"></a>word 1-10</h1><h2 id="word-1-advocate-提倡，拥护，主张"><a href="#word-1-advocate-提倡，拥护，主张" class="headerlink" title="word 1: advocate 提倡，拥护，主张"></a>word 1: <strong>advocate</strong> 提倡，拥护，主张</h2><p>Similarly, many are now aware of this polarized notion of the field and some have begun to advocate possible alternatives.</p><h2 id="word-2-delegate-委托，托付"><a href="#word-2-delegate-委托，托付" class="headerlink" title="word 2: delegate 委托，托付"></a>word 2: <strong>delegate</strong> 委托，托付</h2><p>However, these delegates saw their efforts as serving purposes beyond profit generation.</p><h2 id="word-3-unprecedented-前所未有的，史无前例的"><a href="#word-3-unprecedented-前所未有的，史无前例的" class="headerlink" title="word 3: unprecedented 前所未有的，史无前例的"></a>word 3: <strong>unprecedented</strong> 前所未有的，史无前例的</h2><p>With the surge of population and economic activity during the past two generations or so, the environment has come under unprecedented stress.</p><h2 id="word-4-poignant-尖锐的，强烈的，酸楚的"><a href="#word-4-poignant-尖锐的，强烈的，酸楚的" class="headerlink" title="word 4: poignant 尖锐的，强烈的，酸楚的"></a>word 4: <strong>poignant</strong> 尖锐的，强烈的，酸楚的</h2><p>The women’s stories are at once poignant and remarkable.</p><h2 id="word-5-nebulous-朦胧的，模糊的"><a href="#word-5-nebulous-朦胧的，模糊的" class="headerlink" title="word 5: nebulous 朦胧的，模糊的"></a>word 5: <strong>nebulous</strong> 朦胧的，模糊的</h2><p>The authors admit that their subject matter is nebulous and its meanings ambiguous.</p><h2 id="word-6-clandestine-秘密的，暗中的"><a href="#word-6-clandestine-秘密的，暗中的" class="headerlink" title="word 6: clandestine 秘密的，暗中的"></a>word 6: <strong>clandestine</strong> 秘密的，暗中的</h2><p>They have wanted war, they have been waging it upon us for three years, but in a clandestine, hypocritical, roundabout manner.</p><h2 id="word-7-tirade-（激烈的）长篇演说"><a href="#word-7-tirade-（激烈的）长篇演说" class="headerlink" title="word 7: tirade （激烈的）长篇演说"></a>word 7: <strong>tirade</strong> （激烈的）长篇演说</h2><p>The whole of his speech has been directed as a tirade against and an attack upon trade unionism.</p><h2 id="word-8-recur-重现"><a href="#word-8-recur-重现" class="headerlink" title="word 8: recur 重现"></a>word 8: <strong>recur</strong> 重现</h2><p>Yet in the midst of this diversity, at least four themes recur.</p><h2 id="word-9-tacit-缄默的，默许的"><a href="#word-9-tacit-缄默的，默许的" class="headerlink" title="word 9: tacit 缄默的，默许的"></a>word 9: <strong>tacit</strong> 缄默的，默许的</h2><p>There is a tacit but quite unjustified assumption in traditional grammar that nouns can appear in adjunct function only when accompanied by an explicit dependent.</p><h2 id="word-10-allegation-宣称，断言，指控"><a href="#word-10-allegation-宣称，断言，指控" class="headerlink" title="word 10: allegation 宣称，断言，指控"></a>word 10: <strong>allegation</strong> 宣称，断言，指控</h2><p>Surprisingly, the source for this serious allegation is not identified.</p><h1 id="word-11-20"><a href="#word-11-20" class="headerlink" title="word 11-20"></a>word 11-20</h1><h2 id="word-11-gullible-轻信的，易受骗的"><a href="#word-11-gullible-轻信的，易受骗的" class="headerlink" title="word 11: gullible 轻信的，易受骗的"></a>word 11: <strong>gullible</strong> 轻信的，易受骗的</h2><p>Not only are the public often assumed to be a trifle gullible, they are also portrayed as empty vessels.</p><h2 id="word-12-benign-和蔼的，良性的，吉利的"><a href="#word-12-benign-和蔼的，良性的，吉利的" class="headerlink" title="word 12: benign 和蔼的，良性的，吉利的"></a>word 12: <strong>benign</strong> 和蔼的，良性的，吉利的</h2><p>The chance of malignant degeneration in a benign papillioma is not well understood.</p><h2 id="word-13-peripheral-外围的，不重要的"><a href="#word-13-peripheral-外围的，不重要的" class="headerlink" title="word 13: peripheral 外围的，不重要的"></a>word 13: <strong>peripheral</strong> 外围的，不重要的</h2><p>The book contains a great deal of peripheral detail.</p><h2 id="word-14-rebuff-断然拒绝，回绝"><a href="#word-14-rebuff-断然拒绝，回绝" class="headerlink" title="word 14: rebuff 断然拒绝，回绝"></a>word 14: <strong>rebuff</strong> 断然拒绝，回绝</h2><p>She rebuffed all suggestions that she should resign.</p><h2 id="word-15-animosity-敌意，仇恨"><a href="#word-15-animosity-敌意，仇恨" class="headerlink" title="word 15: animosity 敌意，仇恨"></a>word 15: <strong>animosity</strong> 敌意，仇恨</h2><p>Of course we’re competitive, but there’s no personal animosity between us.</p><h2 id="word-16-tenuous-纤细的，脆弱的"><a href="#word-16-tenuous-纤细的，脆弱的" class="headerlink" title="word 16: tenuous 纤细的，脆弱的"></a>word 16: <strong>tenuous</strong> 纤细的，脆弱的</h2><p>The police have only found a tenuous connection between the two robberies.</p><h2 id="word-17-complacent-自满的，沾沾自喜的"><a href="#word-17-complacent-自满的，沾沾自喜的" class="headerlink" title="word 17: complacent 自满的，沾沾自喜的"></a>word 17: <strong>complacent</strong> 自满的，沾沾自喜的</h2><p>We can’t afford to become complacent about any of our products.</p><h2 id="word-18-acme-顶端，最高点"><a href="#word-18-acme-顶端，最高点" class="headerlink" title="word 18: acme 顶端，最高点"></a>word 18: <strong>acme</strong> 顶端，最高点</h2><p>To act on this world-famous stage is surely the acme of any actor’s career.</p><h2 id="word-19-defunct-失效的，不在世的"><a href="#word-19-defunct-失效的，不在世的" class="headerlink" title="word 19: defunct 失效的，不在世的"></a>word 19: <strong>defunct</strong> 失效的，不在世的</h2><p>(humorous) I think this TV is defunct!</p><h2 id="word-20-abet-支持，煽动，教唆"><a href="#word-20-abet-支持，煽动，教唆" class="headerlink" title="word 20: abet 支持，煽动，教唆"></a>word 20: <strong>abet</strong> 支持，煽动，教唆</h2><p>His accountant had aided and abetted him in the fraud.</p> ]]>
</content>
     
<summary type="html">&lt;h1 id=&quot;word-1-10&quot;&gt;&lt;a href=&quot;#word-1-10&quot; class=&quot;headerlink&quot; title=&quot;word 1-10&quot;&gt;&lt;/a&gt;word 1-10&lt;/h1&gt;&lt;h2 id=&quot;word-1-advocate-提倡，拥护，主张&quot;&gt;&lt;a</summary>
    
<category term="VERBAL ADVANTAGE" scheme="https://blog.whff521.xyz/categories/VERBAL-ADVANTAGE/"/>
 
<category term="English" scheme="https://blog.whff521.xyz/tags/English/"/>

</entry>

</feed>